<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- security -->
	<security:http pattern="/resources/**" security="none" />
	
	<security:http>
		<security:intercept-url pattern="/" access="permitAll()" />
		<security:intercept-url pattern="/top" access="permitAll()" />
		<security:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**" access="isAuthenticated()" />
		<security:form-login default-target-url="/top" />
		<security:logout logout-url="/logout" logout-success-url="/top" />
		<security:csrf disabled="true" />
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
				<!-- {noop} = 암호화 하지말 것
			<security:user-service>
				<security:user name="user" password="{noop}1234" authorities="ROLE_USER" />
				<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN" />
			</security:user-service>
				 -->
			<security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="select id, '{noop}'||password, 1
										 from users
										 where id = ?" 
				authorities-by-username-query="select id, 'ROLE_'||upper(role)
											   from users
											   where id = ?" 
			/>
			<!-- 쿼리에 1 넣으면 true값이라 로그인 가능 +특정 아이디 0으로 넣어서 false값으로 제어가능-->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
